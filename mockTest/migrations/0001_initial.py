# Generated by Django 5.0.6 on 2024-08-20 15:51

import django.db.models.deletion
import shortuuid.django_fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('questions', '0006_alter_answerintegertype_question_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('duration', models.DurationField()),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='questions.icon')),
            ],
        ),
        migrations.CreateModel(
            name='Instructions',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('test_syllabus', models.TextField(max_length=1024)),
                ('general_instructions', models.TextField(max_length=1024)),
                ('navigation_instructions', models.TextField(max_length=1024)),
                ('answering_a_question', models.TextField(max_length=1024)),
                ('declaration', models.TextField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='LiveTest',
            fields=[
                ('test_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mockTest.test')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True)),
            ],
            bases=('mockTest.test',),
        ),
        migrations.AddField(
            model_name='test',
            name='instructions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mockTest.instructions'),
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(default=0, null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_attempts', to='mockTest.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_attempts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField()),
                ('positive_marks', models.IntegerField(default=4)),
                ('negative_marks', models.IntegerField(default=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.question')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TestQuestionAttempt',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Skipped', 'not visited'), ('Marked', 'Marked for Review'), ('Attempted', 'Attempted'), ('Unattempted', 'Unattempted')], max_length=64, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('time_taken', models.DurationField(null=True)),
                ('test_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_attempts', to='mockTest.testattempt')),
                ('test_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mockTest.testquestion')),
            ],
        ),
        migrations.CreateModel(
            name='TestSection',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=22, max_length=22, prefix='', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('order', models.PositiveIntegerField()),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mockTest.test')),
            ],
            options={
                'unique_together': {('test', 'order')},
            },
        ),
        migrations.AddField(
            model_name='testquestion',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='mockTest.testsection'),
        ),
        migrations.CreateModel(
            name='CustomTest',
            fields=[
                ('test_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mockTest.test')),
                ('start_time', models.DateTimeField(blank=True)),
                ('end_time', models.DateTimeField(blank=True)),
                ('syllabus', models.ManyToManyField(related_name='tests', to='questions.chapter')),
            ],
            bases=('mockTest.test',),
        ),
    ]
